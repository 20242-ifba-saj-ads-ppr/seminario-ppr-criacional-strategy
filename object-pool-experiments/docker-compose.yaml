version: '3.8'

services:
  # Serviço para a aplicação Spring Boot
  web:
    build:
      context: .  # Diretório onde o Dockerfile está localizado
    image: spring-objet-pool
    ports:
      - "${APP_PORT}:8080"  # Expor a porta do servidor embutido
    depends_on:
      - postgres  # Garantir que o PostgreSQL inicie antes da aplicação
    environment:
      DATASOURCE_HIKARIPROXY_MAX_POOL_SIZE: ${DATASOURCE_HIKARIPROXY_MAX_POOL_SIZE}
      DATASOURCE_HIKARIPROXY_MIN_IDLE: ${DATASOURCE_HIKARIPROXY_MIN_IDLE}
      DATASOURCE_HIKARIPROXY_IDLE_TIMEOUT: ${DATASOURCE_HIKARIPROXY_IDLE_TIMEOUT}
      DATASOURCE_HIKARIPROXY_MAX_LIFETIME: ${DATASOURCE_HIKARIPROXY_MAX_LIFETIME}
      DATASOURCE_HIKARIPROXY_CONNECTION_TIMEOUT: ${DATASOURCE_HIKARIPROXY_CONNECTION_TIMEOUT}
      DATASOURCE_HIKARIPROXY_VALIDATION_TIMEOUT: ${DATASOURCE_HIKARIPROXY_VALIDATION_TIMEOUT}
      TOMCAT_THREADS_MAX: ${TOMCAT_THREADS_MAX}
      TOMCAT_THREADS_MIN_SPARE: ${TOMCAT_THREADS_MIN_SPARE}
      TOMCAT_THREADS_MAX_IDLE_TIME: ${TOMCAT_THREADS_MAX_IDLE_TIME}
      TOMCAT_THREADS_KEEP_ALIVE_TIME: ${TOMCAT_THREADS_KEEP_ALIVE_TIME}
      TOMCAT_THREADS_ACCEPT_COUNT: ${TOMCAT_THREADS_ACCEPT_COUNT}
    networks:
      - app_network  # Rede isolada própria


  # Serviço para o PostgreSQL
  postgres:
    image: postgres:17
    environment:
      POSTGRES_PASSWORD: password
    networks:
      - app_network  # Rede isolada própria

networks:
  app_network:

